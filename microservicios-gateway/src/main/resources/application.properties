spring.application.name=microservicios-gateway
#PUERTO POR DEFECTO API GATEWAY
server.port=8090
#DONDE ESTA EL SERVIDOR DE EUREKA
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

#ENRUTAMIENTO NUEVO CON GATEWAY
#ENRUTAR MICROSERVICIO usuarios
spring.cloud.gateway.routes[0].id=microservicio-usuarios
#SI USARA BALANCEO DE CARGA
spring.cloud.gateway.routes[0].uri=lb://microservicio-usuarios
#Prefijo en la ruta, /**TODO LO QUE SE DESEE AGREAR AL API
spring.cloud.gateway.routes[0].predicates=Path=/api/alumnos/**
#QUE PARAMETROS ELIMINAR AL MOMENTO DE LLAMAR EL REQUEST AL MICROSERVICIO USUSARIOS
#filters es un map de java
#StripPrefix ELIMINA EL PREFIJO (api/alumnos)
spring.cloud.gateway.routes[0].filters=StripPrefix=2


#ENRUTAR MICROSERVICIO cursos
spring.cloud.gateway.routes[1].id=microservicio-cursos
spring.cloud.gateway.routes[1].uri=lb://microservicio-cursos
spring.cloud.gateway.routes[1].predicates=Path=/api/cursos/**
spring.cloud.gateway.routes[1].filters=StripPrefix=2

#ENRUTAR MICROSERVICIO examenes
spring.cloud.gateway.routes[2].id=microservicio-examenes
spring.cloud.gateway.routes[2].uri=lb://microservicio-examenes
spring.cloud.gateway.routes[2].predicates=Path=/api/examenes/**
spring.cloud.gateway.routes[2].filters=StripPrefix=2

#ENRUTAR MICROSERVICIO respuestas
spring.cloud.gateway.routes[3].id=microservicios-respuestas
spring.cloud.gateway.routes[3].uri=lb://microservicios-respuestas
spring.cloud.gateway.routes[3].predicates=Path=/api/respuestas/**
spring.cloud.gateway.routes[3].filters=StripPrefix=2


#DESHABILITAR YA QUE VIENE CON EUREKA
#spring.cloud.loadbalancer.ribbon.enable=false